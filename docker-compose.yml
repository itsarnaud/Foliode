services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: foliode_backend
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      SYMFONY_ENV: ${SYMFONY_ENV:-dev}
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?serverVersion=13&charset=utf8"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: foliode_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    env_file:
      - .env
    networks:
      - app_network

  db:
    image: postgres:13
    container_name: symfony_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network

  web:
    image: nginx:alpine
    container_name: nginx_web
    ports:
      - "8080:80"
    volumes:
      - ./backend/public:/var/www/html/public
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

networks:
  app_network:

volumes:
  db_data:





# version: '3.8' # Version de la configuration Docker Compose

# services:
#   ###> doctrine/doctrine-bundle ###
#   database:
#     image: postgres:${POSTGRES_VERSION:-16}-alpine
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB:-app}
#       # Changez ce mot de passe en production
#       POSTGRES_PASSWORD: root
#       POSTGRES_USER: root
#     healthcheck:
#       test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#       timeout: 5s
#       retries: 5
#       start_period: 60s
#     volumes:
#       - database_data:/var/lib/postgresql/data:rw
#     ports:
#       - "8889:5432"
#       # Utilisez un répertoire lié au système hôte pour éviter la perte accidentelle de données
#       # - ./docker/db/data:/var/lib/postgresql/data:rw
#   ###< doctrine/doctrine-bundle ###

#   pg-admin:
#     image: dpage/pgadmin4:6
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: admin
#       PGADMIN_LISTEN_PORT: 5050
#     ports:
#       - "5050:5050"

# volumes:
#   ###> doctrine/doctrine-bundle ###
#   database_data:
#   ###< doctrine/doctrine-bundle ###
